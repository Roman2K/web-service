# WebService

REST client. Alternative to [`ActiveResource`](http://api.rubyonrails.org/classes/ActiveResource/Base.html).

## Usage example

    require 'web_service'
    
    class Post < WebService::Resource
      has_many :comments
    end
    
    class Comment < WebService::Resource
      belongs_to :post
    end

### Attributes

    post = Post.new(:title => "First post")
    post.title    # => "First post"
    post.title?   # => true
    post.title = " "
    post.title?   # false
    post.body     # raises NoMethodError
    post.body?    # raises NoMethodError

### CRUD

    begin
      post = Post.create(:title => "First post")
      # => POST /posts
    rescue WebService::ResourceInvalid
      puts $!.response.data['errors']['error'] * "\n"
      post.body = "Like the title says."
      post.save
      # => PUT /posts
    end

### Fetching

    post.id         # => 1
    Post[1] == post # => true
    Post[99]        # => nil
    Post.find(99)   # raises WebService::ResourceNotFound
    
    comment = Comment.new(:post_id => 1)
    comment.post  # => post
    # => GET /posts/1
    comment.post  # => post
    # (cache hit)

### Associations

Use `post.comments` like you would `Comment`, only scoped to `post`.

    puts "First post has %d comments." % post.comments.all.size
    # => GET /posts/1/comments

Associating a comment with a post:

    post.comments.create(:body => "First comment.")
    # => POST /posts/1/comments

The same in a more formal way:

    comment = Comment.new(:body => "First comment.")
    comment.post = post
    comment.post == post  # => true
    comment.post_id       # => 1
    comment.save

### Arbitrary actions

    post.put(:hide)
    # => PUT /posts/1/hide
    
    post.put(:published_at, :published_at => Time.now)
    # => PUT /posts/1/published_at {:published_at => Time.now}
    
    Post.delete(:least_read)
    # => DELETE /posts/least_read
    
    Post.get(:most_read, :offset => 10)
    # => GET /posts/most_read?offset=10

## Formats

* Request bodies are sent **JSON**-encoded.
* Response bodies can be either **JSON**- or **XML**-encoded.

## Status

* Some methods need to be **cached** in memory, like:

  * association collections, so that:

        post.comments.object_id == post.comments.object_id

  * fetched resources, so that:

        comments = post.comments
        comments.all.object_id == comments.all.object_id

* There are **tests** left to be written. Run `rake coverage` to see what is still to be tested.

# Credits

Written by [Roman Le NÃ©grate](http://roman.flucti.com) ([contact](mailto:roman.lenegrate@gmail.com)). Released under the MIT license: see the `LICENSE` file.
